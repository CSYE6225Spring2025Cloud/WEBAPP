name: Continuous Integration of WEBAPP

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Continuous Integration WEBAPP
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm install

      - name: Start GitHub-Hosted MySQL
        run: |
          sudo systemctl start mysql
          sudo systemctl status mysql

      - name: Configure Database & User
        run: |
          mysql -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.MYSQL_DATABASE }};" -u root
          mysql -e "CREATE USER IF NOT EXISTS '${{ secrets.MYSQL_USER }}'@'localhost' IDENTIFIED BY '${{ secrets.MYSQL_ROOT_PASSWORD }}';" -u root
          mysql -e "GRANT ALL PRIVILEGES ON ${{ secrets.MYSQL_DATABASE }}.* TO '${{ secrets.MYSQL_USER }}'@'localhost';" -u root
          mysql -e "FLUSH PRIVILEGES;" -u root

      - name: Debug GitHub Secrets
        run: |
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}"
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}"
          echo "MYSQL_ROOT_PASSWORD is set (masked for security)"

      - name: Configure Environment Variables
        run: |
          echo "DATABASE_URL=mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_ROOT_PASSWORD }}@127.0.0.1:3306/${{ secrets.MYSQL_DATABASE }}" >> $GITHUB_ENV
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV

      - name: Wait for MySQL to be ready
        run: |
          for i in {30..0}; do
            if mysqladmin ping -h "127.0.0.1" --silent; then
              echo "✅ MySQL is ready!"
              break
            fi
            echo "⏳ Waiting for MySQL to start... ($i seconds remaining)"
            sleep 2
          done

      - name: Run Database Migrations
        run: node db.js

      - name: Run Tests
        run: npm test -- --forceExit
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          PORT: ${{ env.PORT }}

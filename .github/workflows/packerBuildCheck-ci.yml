name: Build Packer Custom Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy Custom Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Install Dependencies
        run: npm install
        working-directory: ./src

      - name: Run Tests
        run: npm test -- Test/
        working-directory: ./src

      - name: Build Application Artifact
        run: |
          mkdir -p artifacts
          zip -r artifacts/webapp.zip src/*
        working-directory: .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Configure GCP Credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          packer_version: "1.10.2"

      - name: Build Packer Image in AWS
        run: |
          cd packer
          packer build \
            -var "aws_region=${{ vars.AWS_REGION }}" \
            -var "instance_type=${{ vars.INSTANCE_TYPE }}" \
            -var "source_ami=${{ secrets.AWS_SOURCE_AMI }}" \
            -var "mysql_database=${{ secrets.MYSQL_DATABASE }}" \
            -var "mysql_user=${{ secrets.MYSQL_USER }}" \
            -var "mysql_password=${{ secrets.MYSQL_PASSWORD }}" \
            -var "app_port=${{ secrets.APP_PORT }}" \
            build.pkr.hcl

      - name: Build Packer Image in GCP
        run: |
          cd packer
          packer build \
            -var "gcp_project_id=${{ secrets.GCP_PROJECT_ID }}" \
            -var "gcp_zone=${{ vars.GCP_ZONE }}" \
            -var "machine_type=${{ secrets.MACHINE_TYPE }}" \
            -var "mysql_database=${{ secrets.MYSQL_DATABASE }}" \
            -var "mysql_user=${{ secrets.MYSQL_USER }}" \
            -var "mysql_password=${{ secrets.MYSQL_PASSWORD }}" \
            -var "app_port=${{ secrets.APP_PORT }}" \
            build.pkr.hcl

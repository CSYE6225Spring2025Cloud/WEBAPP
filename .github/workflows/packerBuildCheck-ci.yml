name: Build Packer Custom Image

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy Custom Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
 
      - name: Enable mysql service
        run: sudo systemctl start mysql
 
      - name: Create .env File
        run: |
          echo "DATABASE_URL=mysql://${{secrets.MYSQL_USER}}:${{secrets.MYSQL_ROOT_PASSWORD}}@localhost:3306/${{secrets.MYSQL_DATABASE}} " >> src/.env
 
      - name: Install Project Dependencies
        run: npm install
        working-directory: src
 
      - name: Wait for MySQL to be Ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
 
      - name: Initialize MySQL Database as Root
        run: |
          sudo mysql -u"${{ secrets.MYSQL_USER }}" --password="${{ secrets.MYSQL_PASSWORD }}" <<EOF
          CREATE DATABASE IF NOT EXISTS \`${{ secrets.MYSQL_DATABASE }}\`;
          EOF
 
      - name: Create and Set Environment Variables
        shell: bash
        working-directory: ./src
        run: |
          touch .env
          echo "DATABASE_URL=mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_ROOT_PASSWORD }}@localhost:3306/${{ secrets.MYSQL_DATABASE }}" >> .env

      - name: Run Tests
        working-directory: ./src
        run: npm test
        env:
          DATABASE_URL: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_ROOT_PASSWORD }}@localhost:3306/${{ secrets.MYSQL_DATABASE }}
     
      - name: Install Packer
        uses: hashicorp/setup-packer@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          ami_users: ${{ secrets.AMI_USERS }}
 
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}"
 
      - name: Create JSON File from Secret
        run: |
          echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' | jq '.' > secret.json
 
 
      - name: Initialize Packer Plugins
        run: packer init -upgrade packer/

      - name: Build Custom Image
        run: |
          packer build \
            -var "aws_region=${{ secrets.AWS_REGION }}" \
            -var "mysql_password=${{ secrets.MYSQL_ROOT_PASSWORD }}" \
            -var "instance_type=t2.micro" \
            -var "ami_users=[\"${{ secrets.AMI_USERS }}\"]" \
            -var "credentials_file=secret.json" \
            packer/
